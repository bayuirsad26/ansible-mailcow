---
# Main deployment playbook for SummitEthic Mailcow infrastructure
# Orchestrates all components with ethical considerations

- name: Deploy complete Mailcow infrastructure
  hosts: mailservers
  become: true
  gather_facts: true

  pre_tasks:
    - name: Verify Ansible version
      ansible.builtin.assert:
        that:
          - ansible_version.full is version('2.9', '>=')
        msg: "This playbook requires Ansible 2.9 or higher"
      tags: [always]

    - name: Check connectivity
      ansible.builtin.ping:
      tags: [always]

    - name: Gather network facts
      ansible.builtin.setup:
        gather_subset:
          - network
          - hardware
      tags: [always]

    - name: Display deployment information
      ansible.builtin.debug:
        msg: |
          ==================================================
          Deploying Mailcow infrastructure for SummitEthic
          ==================================================
          Target: {{ inventory_hostname }}
          IP: {{ ansible_default_ipv4.address }}
          Environment: {{ environment }}
          Ethical compliance: {{ compliance_gdpr_enabled }}
          Backup enabled: {{ backup_enabled }}
          Monitoring enabled: {{ monitoring_enabled | default(true) }}
          ==================================================
      tags: [always]

    - name: Validate required variables
      ansible.builtin.assert:
        that:
          - mailcow_hostname is defined
          - traefik_domain is defined
          - environment is defined
          - vault_cloudflare_api_token is defined
          - vault_cloudflare_zone_id is defined
        fail_msg: "Required variables are not defined. Please check your configuration."
      tags: [always]

  roles:
    - role: common
      tags: [common, base]

    - role: security
      tags: [security, hardening]
      when: security_hardening_enabled | default(true)

    - role: docker
      tags: [docker, containers]

    - role: traefik
      tags: [traefik, proxy, ssl]

    - role: mailcow
      tags: [mailcow, mail, email]

    - role: monitoring
      tags: [monitoring, grafana, prometheus]
      when: monitoring_enabled | default(true)

    - role: backup
      tags: [backup, disaster-recovery]
      when: backup_enabled | default(true)

    - role: cloudflare
      tags: [dns, cloudflare]

  post_tasks:
    - name: Perform health checks
      ansible.builtin.include_tasks: health-check.yml
      tags: [health, validation]

    - name: Generate deployment report
      ansible.builtin.template:
        src: deployment-report.md.j2
        dest: "/root/deployment-report-{{ ansible_date_time.epoch }}.md"
        owner: root
        group: root
        mode: '0600'
      tags: [report, documentation]

    - name: Send deployment notification
      ansible.builtin.mail:
        to: "{{ vault_notification_email }}"
        subject: "[{{ environment | upper }}] Deployment completed - {{ inventory_hostname }}"
        body: |
          Deployment completed successfully!

          Server: {{ inventory_hostname }}
          Environment: {{ environment }}
          Time: {{ ansible_date_time.iso8601 }}

          Services deployed:
          - Mailcow: {{ mailcow_version }}
          - Traefik: {{ traefik_version }}
          - Monitoring: {{ 'Enabled' if monitoring_enabled | default(true) else 'Disabled' }}
          - Backup: {{ 'Enabled' if backup_enabled | default(true) else 'Disabled' }}

          Please check the deployment report for details.
      when: vault_notification_email is defined
      tags: [notification]

  handlers:
    - name: Include common handlers
      ansible.builtin.include_tasks: ../roles/common/handlers/main.yml

    - name: Include security handlers
      ansible.builtin.include_tasks: ../roles/security/handlers/main.yml

    - name: Include docker handlers
      ansible.builtin.include_tasks: ../roles/docker/handlers/main.yml
